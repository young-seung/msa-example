apiVersion: v1
kind: Service
metadata:
  name: nest
  labels:
    app: nest
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 5000
  selector:
    app: nest
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nest
  labels:
    app: nest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nest
  template:
    metadata:
      labels:
        app: nest
    spec:
      containers:
        - name: nest
          image: kyhsa93/nestjs-rest-cqrs-example
          ports:
            - containerPort: 5000
          env:
            - name: DATABASE_HOST
              value: "database"
            - name: REDIS_MASTER_HOST
              value: "redis-master"
            - name: REDIS_MASTER_PORT
              value: "6379"
            - name: REDIS_SLAVE_HOST
              value: "redis-slave"
            - name: REDIS_SLAVE_PORT
              value: "6379"
---
apiVersion: v1
kind: Service
metadata:
  name: redis-master
  labels:
    app: redis
    role: master
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: master
    tier: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - name: master
        image: kyhsa93/redis-master
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-slave
  labels:
    app: redis
    role: slave
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: redis
    role: slave
    tier: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-slave
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
      role: slave
      tier: backend
  replicas: 2
  template:
    metadata:
      labels:
        app: redis
        role: slave
        tier: backend
    spec:
      containers:
      - name: slave
        image: kyhsa93/redis-slave
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: database
  labels:
    app: database
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: database
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
  labels:
    app: database
spec:
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
        - name: database
          image: mysql:5.7
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_DATABASE
              value: nest
            - name: MYSQL_ROOT_PASSWORD
              value: test
